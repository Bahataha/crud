<?php

namespace DummyNamespace;

use Carbon\Carbon;
use DummyFullModelClass;
use Duke\CrudGenerator\Concerns\FromCollection;
use Duke\CrudGenerator\Concerns\ShouldAutoSize;
use Duke\CrudGenerator\Concerns\WithEvents;
use Duke\CrudGenerator\Concerns\WithHeadingRow;
use Duke\CrudGenerator\Concerns\WithHeadings;
use Duke\CrudGenerator\Events\AfterSheet;

class DummyClass implements FromCollection, ShouldAutoSize, WithEvents, WithHeadingRow, WithHeadings
{
    public $filter;

    public function __construct($filter)
    {
        $this->filter = $filter;
    }


    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {
        if($this->filter == 'all'){
            $data = DummyModelClass::all();
        }
        else{
            $date_from = Carbon::parse(explode('-', $this->filter)[0])->format('Y-m-d');
            $date_to = Carbon::parse(explode('-', $this->filter)[1])->format('Y-m-d');
            $data = DummyModelClass::whereBetween('created_at', [$date_from.' 00:00:00', $date_to.' 23:59:59'])->get();
        }
        return $data;
    }
    public function headings(): array
        {
            return {{fillable}};
        }

        /**
         * @return array
         */
        public function registerEvents(): array
        {
            return [
                AfterSheet::class    => function(AfterSheet $event) {
                    $cellRange = 'A1:Z1'; // All headers
                    $event->sheet->getDelegate()->getStyle($cellRange)->getFont()->setSize(11)->setBold(true);
                },
            ];
        }
}
